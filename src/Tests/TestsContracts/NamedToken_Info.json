{
  "code": "\nopen Zen.Types\nopen Zen.Base\nopen Zen.Cost\nopen Zen.Asset\nopen Zen.Data\n\nmodule D = Zen.Dictionary\nmodule Tx = Zen.TxSkeleton\nmodule CR = Zen.ContractResult\nmodule RT = Zen.ResultT\nmodule String = FStar.String\nmodule C = Zen.Cost\n\nlet main txSkeleton _ contractId command sender messageBody wallet state =\n  let dict = messageBody >!= tryDict in\n\n  let! returnAddress =\n    dict\n    >?= D.tryFind \"returnAddress\"\n    >?= tryLock \n    in\n\n  let! amount = \n    dict\n    >?= D.tryFind \"amount\"\n    >?= tryU64 \n    in \n\n  let! name = \n    dict\n    >?= D.tryFind \"name\"\n    >?= tryString\n    in\n      \n  match returnAddress,amount,name with\n  | Some returnAddress, Some amount, Some name ->\n    if String.length name <= 32 then     \n    begin\n      let! token = Zen.Asset.fromSubtypeString contractId name in        \n    \n      let! txSkeleton =\n        Tx.lockToAddress token amount returnAddress txSkeleton\n        >>= Tx.mint amount token in\n\n      CR.ofTxSkel txSkeleton\n    end\n    else \n      RT.autoFailw \"name is too long\"    \n  | _ ->\n    RT.autoFailw \"parameters are missing\"\n    \nlet cf _ _ _ _ _ wallet _ =\n    (4 + 64 + 2 + (4 + 64 + 2 + (4 + 64 + 2 + (64 + (64 + 64 + 3)))) + 54)\n    |> cast nat\n    |> C.ret",
  "rlimit": "2723280",
  "hints": "[\"d795da07d210b67208f0a03e0b2208fa\",[[\"Za999559e8567e7707e508890ca5a390fea808f2db35fc6a92cc639ad59ad28d9.main\",1,2,1,[\"@query\",\"primitive_Prims.op_LessThanOrEqual\",\"projection_inverse_BoxBool_proj_0\"],0,\"20cf980725e034da402df955cf78c35f\"],[\"Za999559e8567e7707e508890ca5a390fea808f2db35fc6a92cc639ad59ad28d9.mainFunction\",1,2,1,[\"@MaxIFuel_assumption\",\"@query\",\"Prims_pretyping_ae567c2fb75be05905677af440075565\",\"Zen.Cost.Realized_interpretation_Tm_arrow_8f884e5a479333b9416793675b7e962b\",\"Zen.Types.Main_pretyping_5bd8c5a85db081605d2f2b0ef5761cbb\",\"Zen.Types.Main_pretyping_8d0bd552ce32ff91a3c9f4725122e3be\",\"data_typing_intro_Zen.Types.Main.Anonymous@tok\",\"equation_Prims.nat\",\"equation_Za999559e8567e7707e508890ca5a390fea808f2db35fc6a92cc639ad59ad28d9.cf\",\"equation_Zen.Base.cast\",\"equation_Zen.Base.op_Bar_Greater\",\"equation_Zen.Types.Main.maxCost\",\"fuel_guarded_inversion_Zen.Types.Main.context\",\"function_token_typing_Prims.nat\",\"function_token_typing_Zen.Cost.Realized.ret\",\"int_typing\",\"lemma_Zen.Cost.Realized.force_inc\",\"lemma_Zen.Cost.Realized.force_ret\",\"primitive_Prims.op_Addition\",\"proj_equation_Zen.Types.Main.CostFunc_f\",\"proj_equation_Zen.Types.Main.CostFunc_n\",\"projection_inverse_BoxInt_proj_0\",\"projection_inverse_Zen.Types.Main.CostFunc_f\",\"projection_inverse_Zen.Types.Main.CostFunc_n\",\"refinement_interpretation_Prims_Tm_refine_ba523126f67e00e7cd55f0b92f16681d\",\"refinement_interpretation_Zen.Types.Main_Tm_refine_8ae4abcfc6bc8d4903b7e1f40e070ec2\",\"string_inversion\",\"token_correspondence_Za999559e8567e7707e508890ca5a390fea808f2db35fc6a92cc639ad59ad28d9.cf\",\"token_correspondence_Zen.Base.cast\",\"token_correspondence_Zen.Cost.Realized.ret\",\"token_correspondence_Zen.Types.Main.__proj__CostFunc__item__f\"],0,\"2c877f5eb0b1cdf2bef39f5c0e8e36ab\"]]]\n",
  "queries": "34"
}
